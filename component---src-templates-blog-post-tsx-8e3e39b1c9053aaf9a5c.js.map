{"version":3,"sources":["webpack:///./src/components/BuyMeCoffee.tsx","webpack:///./src/components/Patreon.tsx","webpack:///./src/hooks/useScript.ts","webpack:///./src/components/SeoFooter.tsx","webpack:///./src/templates/BlogPost.tsx","webpack:///./src/components/Bio.tsx","webpack:///./src/components/Tags.tsx","webpack:///./src/components/PostNavigator.tsx"],"names":["BuyMeCoffee","props","href","className","src","alt","Patreon","url","useEffect","script","document","createElement","async","body","appendChild","removeChild","data-patreon-widget-type","SeoFooter","data","length","content","join","Container","BlogPostTemplate","pageContext","previous","next","post","markdownRemark","frontmatter","title","description","author","tags","seoFooter","Layout","location","excerpt","id","PaperContainer","Tags","date","fields","readingTime","text","Bio","dangerouslySetInnerHTML","__html","html","NewsletterSubscribe","bounce","PostNavigator","Array","isArray","prefixText","githubEl","github","target","rel","fluid","profilepicture","childImageSharp","style","minWidth","height","borderRadius","imgStyle","twitter","bio","map","tag","Tag","key","children","NavItem","to","slug","LinkContainer"],"mappings":"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","file":"component---src-templates-blog-post-tsx-8e3e39b1c9053aaf9a5c.js","sourcesContent":["import React from \"react\";\n\nexport interface IProps {\n  className?: string;\n}\n\nexport default function BuyMeCoffee(props: IProps): JSX.Element {\n  return (\n    <a href=\"https://www.buymeacoffee.com/Kp6R5Zr\" className={props.className}>\n      <img\n        src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee&emoji=&slug=Kp6R5Zr&button_colour=FFDD00&font_colour=000000&font_family=Cookie&outline_colour=000000&coffee_colour=ffffff\"\n        alt=\"buy me coffee\"\n      />\n    </a>\n  );\n}\n","import React from \"react\";\nimport useScript from \"../hooks/useScript\";\n\nexport interface IProps {\n  className?: string;\n}\n\nexport default function Patreon(props: IProps): JSX.Element {\n  useScript(\"https://c6.patreon.com/becomePatronButton.bundle.js\");\n  return (\n    <a\n      href=\"https://www.patreon.com/bePatron?u=44509257\"\n      data-patreon-widget-type=\"become-patron-button\"\n      className={props.className}\n    >\n      Become a Patron!\n    </a>\n  );\n}\n","import { useEffect } from \"react\";\n\nexport default function useScript(url: string): void {\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n\n    script.src = url;\n    script.async = true;\n\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [url]);\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nexport interface IProps {\n  data: Array<string>;\n}\n\nexport default function SeoFooter({ data }: IProps) {\n  if (data.length === 0) {\n    return null;\n  }\n\n  const content = data.join(\" \");\n  return <Container>{content}</Container>;\n}\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  color: #ccc;\n`;\n","import React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport { IBlogPostBySlugQuery } from \"../../graphql-types\";\nimport Bio from \"../components/Bio\";\nimport Layout from \"../components/Layout\";\nimport Tags from \"../components/Tags\";\nimport NewsletterSubscribe from \"../components/NewsletterSubscribe\";\nimport SeoFooter from \"../components/SeoFooter\";\nimport BuyMeCoffee from \"../components/BuyMeCoffee\";\nimport Patreon from \"../components/Patreon\";\nimport PostNavigator from \"../components/PostNavigator\";\nimport PaperContainer from \"../components/PaperContainer\";\n\nexport interface IPostLink {\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    title: string;\n  };\n}\n\nexport interface IPageContext {\n  slug: string;\n  previous?: IPostLink;\n  next?: IPostLink;\n}\n\ninterface IProps extends PageProps<IBlogPostBySlugQuery, IPageContext> {}\n\nexport default function BlogPostTemplate(props: IProps) {\n  const { previous, next } = props.pageContext;\n  const post = props.data.markdownRemark;\n  const {\n    title,\n    description,\n    author,\n    tags = [],\n    seoFooter = \"\",\n  } = post.frontmatter;\n\n  return (\n    <Layout\n      location={props.location}\n      title={title}\n      description={`${description || post.excerpt}\\nBy ${author.id}`}\n      author={author}\n    >\n      <PaperContainer>\n        <article className=\"space-y-5\">\n          <Tags tags={tags} />\n          <header className=\"pb-3\">\n            <h1> {title} </h1>\n            <div className=\"py-3 text-sm text-gray-700 dark:text-light_white\">\n              {`${post.frontmatter.date} • ${post.fields.readingTime.text}`}\n            </div>\n            <Bio author={author} />\n          </header>\n\n          <section\n            className=\"space-y-5 nsj-post-content\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n\n          <section className=\"flex items-center -m-1\">\n            <BuyMeCoffee className=\"m-1\" />\n            <div className=\"m-1\">\n              <Patreon />\n            </div>\n          </section>\n          <NewsletterSubscribe bounce={true} />\n        </article>\n\n        <div className=\"py-4\">\n          <PostNavigator previous={previous} next={next} />\n        </div>\n\n        <SeoFooter data={Array.isArray(seoFooter) ? seoFooter : [seoFooter]} />\n      </PaperContainer>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n        readingTime {\n          text\n        }\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n        seoFooter\n        author {\n          id\n          bio\n          twitter\n          github\n          profilepicture {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Image from \"gatsby-image\";\nimport {\n  IGatsbyImageSharpFluidFragment,\n  IAuthorFragmentFragment,\n} from \"../../graphql-types\";\n\ninterface IAuthor extends IAuthorFragmentFragment {\n  profilepicture: {\n    childImageSharp: {\n      fluid: IGatsbyImageSharpFluidFragment;\n    };\n  };\n}\n\ninterface IProps {\n  author: IAuthor;\n  prefixText?: string;\n}\n\nexport default function Bio(props: IProps) {\n  const { author, prefixText = \"Written by\" } = props;\n\n  const githubEl = (\n    <a href={author.github} target=\"_blank\" rel=\"noopener noreferrer\">\n      Github\n    </a>\n  );\n\n  return (\n    <div\n      className={`\n      flex items-center max-w-lg border-t border-b py-5\n      my-5\n\n      border-pink-700\n      dark:border-gray-50\n      dark:border-opacity-25\n      `}\n    >\n      <Image\n        fluid={author.profilepicture.childImageSharp.fluid}\n        alt={author.id}\n        style={{\n          minWidth: 75,\n          height: 75,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p className=\"ml-2\">\n        {`${prefixText} `}\n        <a href={`https://twitter.com/${author.twitter}`}>{author.id}</a>:{\" \"}\n        {author.bio} {githubEl}\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport interface IProps {\n  tags: Array<string>;\n  className?: string;\n}\n\nexport default function Tags({ tags, className }: IProps) {\n  return (\n    <div className={`flex flex-wrap -m-0.5 dark:-m-2  ${className}`}>\n      {tags.map((tag) => (\n        <Tag key={tag}>{`#${tag}`}</Tag>\n      ))}\n    </div>\n  );\n}\n\nexport interface ITagProps {\n  children: JSX.Element | string;\n}\n\nexport function Tag(props: ITagProps): JSX.Element {\n  return (\n    <span\n      className={`\n      m-0.5 rounded px-2\n      text-xs cursor-pointer\n      bg-yellow-600 dark:bg-transparent\n      text-black dark:text-pink-600\n      font-bold\n      `}\n    >\n      {props.children}\n    </span>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\n\nexport interface IPostLink {\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    title: string;\n  };\n}\n\nexport interface IProps {\n  previous?: IPostLink;\n  next?: IPostLink;\n}\n\nexport default function PostNavigator(props: IProps) {\n  const { previous, next } = props;\n  return (\n    <Container className=\"-m-1\">\n      <NavItem to={previous?.fields.slug} rel=\"prev\">\n        ← {previous?.frontmatter.title}\n      </NavItem>\n      <NavItem to={next?.fields.slug} rel=\"next\">\n        {next?.frontmatter.title} →\n      </NavItem>\n    </Container>\n  );\n}\n\nexport interface INavItemProps {\n  to?: string;\n  rel: string;\n  children: Array<JSX.Element> | JSX.Element | Array<string> | string;\n}\n\nexport function NavItem(props: INavItemProps) {\n  if (!props.to) {\n    return null;\n  }\n  return (\n    <LinkContainer className=\"rounded-md border-pink-600 border p-5 m-1\">\n      <Link to={props.to} rel={props.rel}>\n        {props.children}\n      </Link>\n    </LinkContainer>\n  );\n}\n\nconst Container = styled.nav(`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0;\n  flex-direction: column;\n\n  @media (min-width: 800px) {\n    flex-direction: row;\n  }\n`);\n\nconst LinkContainer = styled.div`\n  @media (min-width: 800px) {\n    width: 49%;\n  }\n`;\n"],"sourceRoot":""}