{"version":3,"sources":["webpack:///./src/components/PostCard.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Bio.tsx","webpack:///./src/components/Tags.tsx","webpack:///./src/components/PostNavigator.tsx"],"names":["PostCard","props","slug","title","content","authorId","date","readingTime","tags","onClick","_e","navigate","className","oneline","to","dangerouslySetInnerHTML","__html","Tags","BlogIndex","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","firstPost","node","firstPostContent","frontmatter","author","previousPost","Layout","location","map","fields","description","excerpt","key","text","id","PaperContainer","Bio","html","PostNavigator","previous","prefixText","githubEl","href","github","target","rel","fluid","profilepicture","childImageSharp","alt","style","minWidth","height","borderRadius","imgStyle","twitter","bio","tag","Tag","children","next","Container","NavItem","LinkContainer"],"mappings":"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","file":"component---src-pages-index-tsx-69bd2a292b90da6afa2f.js","sourcesContent":["import React from \"react\";\nimport { Link, navigate } from \"gatsby\";\nimport Tags from \"./Tags\";\nimport { oneline } from \"../utils/strTag\";\n\n// TODO better define this structure\nexport interface IProps {\n  slug: string;\n  title: string;\n  content: string;\n  authorId: string;\n  date: string;\n  readingTime: string;\n  tags: Array<string>;\n  className?: string;\n}\n\nexport default function PostCard(props: IProps): JSX.Element {\n  const { slug, title, content, authorId, date, readingTime, tags } = props;\n\n  function onClick(_e: React.MouseEvent<HTMLElement, MouseEvent>): void {\n    navigate(slug);\n  }\n\n  return (\n    <article\n      onClick={onClick}\n      className={oneline`\n        bg-white shadow-md p-3 rounded-md\n        border-black-100 border cursor-pointer\n        dark:border-transparent\n        dark:bg-opacity-10\n        dark:bg-white\n        flex flex-col\n        space-y-3\n\n        ${props.className}\n    `}\n    >\n      <div className=\"\">\n        <h3 className=\"p-0\">\n          <Link to={slug}>{title}</Link>\n        </h3>\n        <div className=\"dark:text-white\">\n          <small>{`${date} • ${readingTime}`}</small>\n          <small>\n            {` • by `}\n            <span className=\"font-bold text-pink-600 dark:text-yellow-600\">\n              {authorId}\n            </span>\n          </small>\n        </div>\n      </div>\n      <section>\n        <p dangerouslySetInnerHTML={{ __html: content }} />\n      </section>\n      <Tags tags={tags} className=\"!mt-auto pt-5\" />\n    </article>\n  );\n}\n","import React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\n\nimport { IBlogIndexQuery } from \"../../graphql-types\";\nimport PostCard from \"../components/PostCard\";\nimport PaperContainer from \"../components/PaperContainer\";\nimport Tags from \"../components/Tags\";\nimport Bio from \"../components/Bio\";\nimport PostNavigator from \"../components/PostNavigator\";\n\nexport interface IProps extends PageProps<IBlogIndexQuery> {}\n\nexport default function BlogIndex(props: IProps) {\n  const { data } = props;\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  const firstPost = posts[0]?.node;\n  const firstPostContent = posts[0]?.node.frontmatter;\n  const { title, date, author, tags = [] } = firstPostContent;\n\n  const previousPost = posts[1]?.node;\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <div className=\"space-y-3 p-3 lg:p-20\">\n        <SEO title=\"NoSleep Javascript blog by franleplant\" />\n\n        <div className=\"flex flex-wrap justify-center max-w-screen-xl -m-3\">\n          {posts.map(({ node }) => {\n            const slug = node.fields.slug;\n            const title = node.frontmatter.title || slug;\n            const content = node.frontmatter.description || node.excerpt;\n            const tags = node.frontmatter.tags;\n\n            return (\n              <PostCard\n                key={slug}\n                slug={slug}\n                title={title}\n                content={content}\n                date={node.frontmatter.date}\n                readingTime={node.fields.readingTime.text}\n                authorId={node.frontmatter.author.id}\n                tags={tags}\n                className=\"w-96 m-3\"\n              />\n            );\n          })}\n        </div>\n      </div>\n\n      <PaperContainer>\n        <article className=\"space-y-5\">\n          <Tags tags={tags} />\n          <header className=\"pb-3\">\n            <h1> {title} </h1>\n            <div className=\"py-3 text-sm text-gray-700 dark:text-light_white\">\n              {`${date} • ${firstPost.fields.readingTime.text}`}\n            </div>\n            <Bio author={author} />\n          </header>\n\n          <section\n            className=\"space-y-5 nsj-post-content\"\n            dangerouslySetInnerHTML={{ __html: firstPost.html }}\n          />\n        </article>\n\n        <div className=\"py-4\">\n          <PostNavigator previous={previousPost} />\n        </div>\n      </PaperContainer>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          html\n          excerpt\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n            tags\n            author {\n              id\n              bio\n              twitter\n              github\n              profilepicture {\n                childImageSharp {\n                  fluid {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    allAuthorYaml {\n      nodes {\n        bio\n        id\n        twitter\n        github\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Image from \"gatsby-image\";\nimport {\n  IGatsbyImageSharpFluidFragment,\n  IAuthorFragmentFragment,\n} from \"../../graphql-types\";\n\ninterface IAuthor extends IAuthorFragmentFragment {\n  profilepicture: {\n    childImageSharp: {\n      fluid: IGatsbyImageSharpFluidFragment;\n    };\n  };\n}\n\ninterface IProps {\n  author: IAuthor;\n  prefixText?: string;\n}\n\nexport default function Bio(props: IProps) {\n  const { author, prefixText = \"Written by\" } = props;\n\n  const githubEl = (\n    <a href={author.github} target=\"_blank\" rel=\"noopener noreferrer\">\n      Github\n    </a>\n  );\n\n  return (\n    <div\n      className={`\n      flex items-center max-w-lg border-t border-b py-5\n      my-5\n\n      border-pink-700\n      dark:border-gray-50\n      dark:border-opacity-25\n      `}\n    >\n      <Image\n        fluid={author.profilepicture.childImageSharp.fluid}\n        alt={author.id}\n        style={{\n          minWidth: 75,\n          height: 75,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p className=\"ml-2\">\n        {`${prefixText} `}\n        <a href={`https://twitter.com/${author.twitter}`}>{author.id}</a>:{\" \"}\n        {author.bio} {githubEl}\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport interface IProps {\n  tags: Array<string>;\n  className?: string;\n}\n\nexport default function Tags({ tags, className }: IProps) {\n  return (\n    <div className={`flex flex-wrap -m-0.5 dark:-m-2  ${className}`}>\n      {tags.map((tag) => (\n        <Tag key={tag}>{`#${tag}`}</Tag>\n      ))}\n    </div>\n  );\n}\n\nexport interface ITagProps {\n  children: JSX.Element | string;\n}\n\nexport function Tag(props: ITagProps): JSX.Element {\n  return (\n    <span\n      className={`\n      m-0.5 rounded px-2\n      text-xs cursor-pointer\n      bg-yellow-600 dark:bg-transparent\n      text-black dark:text-pink-600\n      font-bold\n      `}\n    >\n      {props.children}\n    </span>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\n\nexport interface IPostLink {\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    title: string;\n  };\n}\n\nexport interface IProps {\n  previous?: IPostLink;\n  next?: IPostLink;\n}\n\nexport default function PostNavigator(props: IProps) {\n  const { previous, next } = props;\n  return (\n    <Container className=\"-m-1\">\n      <NavItem to={previous?.fields.slug} rel=\"prev\">\n        ← {previous?.frontmatter.title}\n      </NavItem>\n      <NavItem to={next?.fields.slug} rel=\"next\">\n        {next?.frontmatter.title} →\n      </NavItem>\n    </Container>\n  );\n}\n\nexport interface INavItemProps {\n  to?: string;\n  rel: string;\n  children: Array<JSX.Element> | JSX.Element | Array<string> | string;\n}\n\nexport function NavItem(props: INavItemProps) {\n  if (!props.to) {\n    return null;\n  }\n  return (\n    <LinkContainer className=\"rounded-md border-pink-600 border p-5 m-1\">\n      <Link to={props.to} rel={props.rel}>\n        {props.children}\n      </Link>\n    </LinkContainer>\n  );\n}\n\nconst Container = styled.nav(`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0;\n  flex-direction: column;\n\n  @media (min-width: 800px) {\n    flex-direction: row;\n  }\n`);\n\nconst LinkContainer = styled.div`\n  @media (min-width: 800px) {\n    width: 49%;\n  }\n`;\n"],"sourceRoot":""}